{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Linear Regression.py","provenance":[],"authorship_tag":"ABX9TyOOXrgrODtGxqHJ01Cyh7+8"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"Y6L-Xs2gxGEb"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import seaborn as sns;sns.set()\n","import matplotlib.pyplot as plt\n","%matplotlib inline"]},{"cell_type":"code","source":["dataset=pd.read_csv(\"/flipkartlaptopitems.csv\")"],"metadata":{"id":"LQSGmSPcyQ69"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dataset\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":165},"id":"Vp2axGk7y_f6","executionInfo":{"status":"error","timestamp":1641357819750,"user_tz":-330,"elapsed":17,"user":{"displayName":"Mr. R. Nirmalan CSE","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04850652355569170471"}},"outputId":"4de57eaa-2742-4c7e-b714-72dbc0868a4e"},"execution_count":1,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-3075b36c09c8>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdataset\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'dataset' is not defined"]}]},{"cell_type":"code","source":["dataset=pd.read_csv(\"/LinearRegressionData.csv\")"],"metadata":{"id":"tHM2ZBpRz7xe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dataset\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":677},"id":"u83PB36I0Hce","executionInfo":{"status":"ok","timestamp":1640926057715,"user_tz":-330,"elapsed":338,"user":{"displayName":"Mr. R. Nirmalan CSE","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04850652355569170471"}},"outputId":"dd4c7cbf-0b3a-45b3-d83d-0e16d902329f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-953135fa-b09e-4bbe-878b-9205966ff45b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X</th>\n","      <th>Y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>8</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>10</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>11</td>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>12</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>13</td>\n","      <td>26</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>14</td>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>15</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>16</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>17</td>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>18</td>\n","      <td>36</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>19</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>20</td>\n","      <td>40</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-953135fa-b09e-4bbe-878b-9205966ff45b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-953135fa-b09e-4bbe-878b-9205966ff45b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-953135fa-b09e-4bbe-878b-9205966ff45b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["     X   Y\n","0    1   2\n","1    2   4\n","2    3   6\n","3    4   8\n","4    5  10\n","5    6  12\n","6    7  14\n","7    8  16\n","8    9  18\n","9   10  20\n","10  11  22\n","11  12  24\n","12  13  26\n","13  14  28\n","14  15  30\n","15  16  32\n","16  17  34\n","17  18  36\n","18  19  38\n","19  20  40"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["dataset.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QIP20FHy0Rk9","executionInfo":{"status":"ok","timestamp":1640926101438,"user_tz":-330,"elapsed":5,"user":{"displayName":"Mr. R. Nirmalan CSE","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04850652355569170471"}},"outputId":"3978f80f-550b-48f0-f248-fcb6fcc4144d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(20, 2)"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["X_train = dataset.iloc[:,:-1].values\n","Y_train = dataset.iloc[:,1].values"],"metadata":{"id":"TE0E6sDM0aPU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dataset1=pd.read_csv(\"/LinearRegressionNewData.csv\")"],"metadata":{"id":"1pVji2h01Jy4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_test = dataset1.iloc[:,:-1].values\n","Y_test = dataset1.iloc[:,1].values"],"metadata":{"id":"R46HWwQH1bfO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.linear_model import LinearRegression\n","regressor=LinearRegression()\n","regressor.fit(X_train,Y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ELCZzR1a1ii4","executionInfo":{"status":"ok","timestamp":1640926509994,"user_tz":-330,"elapsed":557,"user":{"displayName":"Mr. R. Nirmalan CSE","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04850652355569170471"}},"outputId":"1c9b1176-0a57-4f22-d43b-f896ef0acfc6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["y_pred=regressor.predict(X_test)"],"metadata":{"id":"uHXfYRrd18F_","executionInfo":{"status":"error","timestamp":1641358495788,"user_tz":-330,"elapsed":412,"user":{"displayName":"Mr. R. Nirmalan CSE","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04850652355569170471"}},"colab":{"base_uri":"https://localhost:8080/","height":165},"outputId":"96954552-feef-45cc-ae51-efa8c8172c47"},"execution_count":2,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-4541593ba058>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0my_pred\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mregressor\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'regressor' is not defined"]}]},{"cell_type":"code","source":["plt.scatter(X_train,Y_train, color=\"blue\")\n","plt.plot(X_train,regressor.predict(X_train), color=\"red\")\n","plt.xlabel('X')\n","plt.ylabel('Y')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":285},"id":"RmXRyYhc2GKi","executionInfo":{"status":"ok","timestamp":1640926712125,"user_tz":-330,"elapsed":832,"user":{"displayName":"Mr. R. Nirmalan CSE","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04850652355569170471"}},"outputId":"752a1ec9-8c20-4808-a2b2-cbfb9c710ca0"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plt.scatter(X_test,Y_test, color=\"blue\")\n","plt.plot(X_train,regressor.predict(X_train), color=\"red\")\n","plt.xlabel('X')\n","plt.ylabel('Y')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":285},"id":"_PeSQ-mZ2xuJ","executionInfo":{"status":"ok","timestamp":1640926775008,"user_tz":-330,"elapsed":359,"user":{"displayName":"Mr. R. Nirmalan CSE","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04850652355569170471"}},"outputId":"650dc2ab-1552-49f0-eb4c-30493a2982dc"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["dataset1\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":645},"id":"qfXqvQB61StF","executionInfo":{"status":"ok","timestamp":1640926366000,"user_tz":-330,"elapsed":369,"user":{"displayName":"Mr. R. Nirmalan CSE","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04850652355569170471"}},"outputId":"8b7648b2-9bfd-4963-b90c-1cd5a86a3bf7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-37e7d567-6c08-4fb6-abdc-6da426959781\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X</th>\n","      <th>Y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20</td>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>30</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>40</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>50</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>60</td>\n","      <td>120</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>70</td>\n","      <td>140</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>80</td>\n","      <td>160</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>90</td>\n","      <td>180</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>100</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>110</td>\n","      <td>220</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>120</td>\n","      <td>240</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>130</td>\n","      <td>260</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>140</td>\n","      <td>280</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>150</td>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>160</td>\n","      <td>320</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>170</td>\n","      <td>340</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>180</td>\n","      <td>360</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>190</td>\n","      <td>380</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-37e7d567-6c08-4fb6-abdc-6da426959781')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-37e7d567-6c08-4fb6-abdc-6da426959781 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-37e7d567-6c08-4fb6-abdc-6da426959781');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["      X    Y\n","0    10   20\n","1    20   40\n","2    30   60\n","3    40   80\n","4    50  100\n","5    60  120\n","6    70  140\n","7    80  160\n","8    90  180\n","9   100  200\n","10  110  220\n","11  120  240\n","12  130  260\n","13  140  280\n","14  150  300\n","15  160  320\n","16  170  340\n","17  180  360\n","18  190  380"]},"metadata":{},"execution_count":11}]}]}